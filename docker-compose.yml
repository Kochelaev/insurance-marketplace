version: "3"
services:
  app:
    build:
      args:
        user: marketplace
        uid: 1000
      context: ./
      dockerfile: ./.docker/Dockerfile
    image: marketplace
    container_name: marketplace-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./marketplace/:/var/www
    networks:
      - marketplace

  nginx:
    image: nginx:alpine
    container_name: marketplace-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./marketplace/:/var/www
      - ./.docker/nginx/:/etc/nginx/conf.d/
    networks:
      - marketplace

  mysql8.0:
    image: mysql:8.0
    container_name: marketplace-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: marketplace
    volumes:
      - ./.docker/db/:/var/lib/mysql
    ports:
      - 3366:3306
    networks:
      - marketplace       

  redis:
    container_name: marketplace-redis
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - './.docker/redis:/data'
    networks:
      - marketplace
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s


  search:
    image: elasticsearch:6.8.1
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
    ports:
      - 9200:9200
    networks:
      - marketplace

networks:
  marketplace:
    driver: bridge






    # elastic:    
  #   container_name: marketplace-elastic    
  #   restart: unless-stopped
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - bootstrap.memory_lock=true
  #     - network.bind_host=0.0.0.0
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #   volumes:
  #     - './.docker/elastic/:/usr/share/elasticsearch/data'
  #     - './.docker/elastc/logs:/usr/share/elasticsearch/logs'
  #   networks:
  #     - marketplace
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   ulimits:
  #     memlock:
  #       hard: -1
  #       soft: -1
  #   cap_add:
  #     - IPC_LOCK
  #   driver: bridge
